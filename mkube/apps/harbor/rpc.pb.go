// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: apps/harbor/pb/rpc.proto

package harbor

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// QueryProjectsRequest结构体
type QueryProjectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"curpage" json:"curpage"
	CurPage int64 `protobuf:"varint,1,opt,name=CurPage,proto3" json:"curpage" bson:"curpage"`
	// @gotags: bson:"pagesize" json:"pagesize"
	PageSize int64 `protobuf:"varint,2,opt,name=PageSize,proto3" json:"pagesize" bson:"pagesize"`
	// @gotags: bson:"keyword" json:"keyword"
	Keyword string `protobuf:"bytes,3,opt,name=Keyword,proto3" json:"keyword" bson:"keyword"`
}

func (x *QueryProjectsRequest) Reset() {
	*x = QueryProjectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_harbor_pb_rpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryProjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryProjectsRequest) ProtoMessage() {}

func (x *QueryProjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apps_harbor_pb_rpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryProjectsRequest.ProtoReflect.Descriptor instead.
func (*QueryProjectsRequest) Descriptor() ([]byte, []int) {
	return file_apps_harbor_pb_rpc_proto_rawDescGZIP(), []int{0}
}

func (x *QueryProjectsRequest) GetCurPage() int64 {
	if x != nil {
		return x.CurPage
	}
	return 0
}

func (x *QueryProjectsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryProjectsRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

// QueryRepositoriesRequest结构体
type QueryRepositoriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"projectName" json:"projectName"
	ProjectName string `protobuf:"bytes,1,opt,name=ProjectName,proto3" json:"projectName" bson:"projectName"`
	// @gotags: bson:"curpage" json:"curpage"
	CurPage int64 `protobuf:"varint,2,opt,name=CurPage,proto3" json:"curpage" bson:"curpage"`
	// @gotags: bson:"pagesize" json:"pagesize"
	PageSize int64 `protobuf:"varint,3,opt,name=PageSize,proto3" json:"pagesize" bson:"pagesize"`
	// @gotags: bson:"keyword" json:"keyword"
	Keyword string `protobuf:"bytes,4,opt,name=Keyword,proto3" json:"keyword" bson:"keyword"`
}

func (x *QueryRepositoriesRequest) Reset() {
	*x = QueryRepositoriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_harbor_pb_rpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRepositoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRepositoriesRequest) ProtoMessage() {}

func (x *QueryRepositoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apps_harbor_pb_rpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRepositoriesRequest.ProtoReflect.Descriptor instead.
func (*QueryRepositoriesRequest) Descriptor() ([]byte, []int) {
	return file_apps_harbor_pb_rpc_proto_rawDescGZIP(), []int{1}
}

func (x *QueryRepositoriesRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *QueryRepositoriesRequest) GetCurPage() int64 {
	if x != nil {
		return x.CurPage
	}
	return 0
}

func (x *QueryRepositoriesRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryRepositoriesRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

// QueryArtifactsRequest结构体
type QueryArtifactsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"curpage" json:"curpage"
	CurPage int64 `protobuf:"varint,1,opt,name=CurPage,proto3" json:"curpage" bson:"curpage"`
	// @gotags: bson:"pagesize" json:"pagesize"
	PageSize int64 `protobuf:"varint,2,opt,name=PageSize,proto3" json:"pagesize" bson:"pagesize"`
	// @gotags: bson:"keyword" json:"keyword"
	Keyword string `protobuf:"bytes,3,opt,name=Keyword,proto3" json:"keyword" bson:"keyword"`
	// @gotags: bson:"projectName" json:"projectName"
	ProjectName string `protobuf:"bytes,4,opt,name=ProjectName,proto3" json:"projectName" bson:"projectName"`
	// @gotags: bson:"repositoryName" json:"repositoryName"
	RepositoryName string `protobuf:"bytes,5,opt,name=RepositoryName,proto3" json:"repositoryName" bson:"repositoryName"`
}

func (x *QueryArtifactsRequest) Reset() {
	*x = QueryArtifactsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_harbor_pb_rpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryArtifactsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryArtifactsRequest) ProtoMessage() {}

func (x *QueryArtifactsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apps_harbor_pb_rpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryArtifactsRequest.ProtoReflect.Descriptor instead.
func (*QueryArtifactsRequest) Descriptor() ([]byte, []int) {
	return file_apps_harbor_pb_rpc_proto_rawDescGZIP(), []int{2}
}

func (x *QueryArtifactsRequest) GetCurPage() int64 {
	if x != nil {
		return x.CurPage
	}
	return 0
}

func (x *QueryArtifactsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryArtifactsRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *QueryArtifactsRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *QueryArtifactsRequest) GetRepositoryName() string {
	if x != nil {
		return x.RepositoryName
	}
	return ""
}

// MatchImageRequest结构体
type MatchImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"keyword" json:"keyword"
	Keyword string `protobuf:"bytes,1,opt,name=Keyword,proto3" json:"keyword" bson:"keyword"`
}

func (x *MatchImageRequest) Reset() {
	*x = MatchImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_harbor_pb_rpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchImageRequest) ProtoMessage() {}

func (x *MatchImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apps_harbor_pb_rpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchImageRequest.ProtoReflect.Descriptor instead.
func (*MatchImageRequest) Descriptor() ([]byte, []int) {
	return file_apps_harbor_pb_rpc_proto_rawDescGZIP(), []int{3}
}

func (x *MatchImageRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

var File_apps_harbor_pb_rpc_proto protoreflect.FileDescriptor

var file_apps_harbor_pb_rpc_proto_rawDesc = []byte{
	0x0a, 0x18, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x68, 0x61, 0x72, 0x62, 0x6f, 0x72, 0x2f, 0x70, 0x62,
	0x2f, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x63, 0x6f, 0x64, 0x65,
	0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x6d, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x68, 0x61, 0x72, 0x62,
	0x6f, 0x72, 0x1a, 0x1b, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x68, 0x61, 0x72, 0x62, 0x6f, 0x72, 0x2f,
	0x70, 0x62, 0x2f, 0x68, 0x61, 0x72, 0x62, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x66, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x75, 0x72, 0x50, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x43, 0x75, 0x72, 0x50, 0x61, 0x67,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x8c, 0x01, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x75, 0x72, 0x50, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x43, 0x75, 0x72, 0x50, 0x61, 0x67, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xb1, 0x01, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x43, 0x75, 0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x43, 0x75, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x52, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2d, 0x0a, 0x11, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x32, 0x95, 0x03, 0x0a, 0x03, 0x52, 0x50,
	0x43, 0x12, 0x5f, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x12, 0x2c, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x6d,
	0x6b, 0x75, 0x62, 0x65, 0x2e, 0x68, 0x61, 0x72, 0x62, 0x6f, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x6d, 0x6b, 0x75,
	0x62, 0x65, 0x2e, 0x68, 0x61, 0x72, 0x62, 0x6f, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x12, 0x6b, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x30, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x6f,
	0x72, 0x73, 0x65, 0x2e, 0x6d, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x68, 0x61, 0x72, 0x62, 0x6f, 0x72,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x6f, 0x64, 0x65,
	0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x6d, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x68, 0x61, 0x72, 0x62,
	0x6f, 0x72, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12,
	0x62, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x73, 0x12, 0x2d, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x6d, 0x6b,
	0x75, 0x62, 0x65, 0x2e, 0x68, 0x61, 0x72, 0x62, 0x6f, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x6d, 0x6b, 0x75,
	0x62, 0x65, 0x2e, 0x68, 0x61, 0x72, 0x62, 0x6f, 0x72, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x73, 0x12, 0x5c, 0x0a, 0x0a, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x29, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x6d, 0x6b,
	0x75, 0x62, 0x65, 0x2e, 0x68, 0x61, 0x72, 0x62, 0x6f, 0x72, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63,
	0x6f, 0x64, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x6d, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x68,
	0x61, 0x72, 0x62, 0x6f, 0x72, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x73, 0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x73, 0x6f, 0x6c, 0x6f, 0x64, 0x62, 0x61, 0x2f, 0x64, 0x65, 0x76, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2f, 0x6d, 0x6b, 0x75, 0x62, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x68, 0x61, 0x72, 0x62,
	0x6f, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_apps_harbor_pb_rpc_proto_rawDescOnce sync.Once
	file_apps_harbor_pb_rpc_proto_rawDescData = file_apps_harbor_pb_rpc_proto_rawDesc
)

func file_apps_harbor_pb_rpc_proto_rawDescGZIP() []byte {
	file_apps_harbor_pb_rpc_proto_rawDescOnce.Do(func() {
		file_apps_harbor_pb_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_apps_harbor_pb_rpc_proto_rawDescData)
	})
	return file_apps_harbor_pb_rpc_proto_rawDescData
}

var file_apps_harbor_pb_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_apps_harbor_pb_rpc_proto_goTypes = []interface{}{
	(*QueryProjectsRequest)(nil),     // 0: codehorse.mkube.harbor.QueryProjectsRequest
	(*QueryRepositoriesRequest)(nil), // 1: codehorse.mkube.harbor.QueryRepositoriesRequest
	(*QueryArtifactsRequest)(nil),    // 2: codehorse.mkube.harbor.QueryArtifactsRequest
	(*MatchImageRequest)(nil),        // 3: codehorse.mkube.harbor.MatchImageRequest
	(*Projects)(nil),                 // 4: codehorse.mkube.harbor.Projects
	(*Repositories)(nil),             // 5: codehorse.mkube.harbor.Repositories
	(*Artifacts)(nil),                // 6: codehorse.mkube.harbor.Artifacts
	(*MatchImages)(nil),              // 7: codehorse.mkube.harbor.MatchImages
}
var file_apps_harbor_pb_rpc_proto_depIdxs = []int32{
	0, // 0: codehorse.mkube.harbor.RPC.QueryProjects:input_type -> codehorse.mkube.harbor.QueryProjectsRequest
	1, // 1: codehorse.mkube.harbor.RPC.QueryRepositories:input_type -> codehorse.mkube.harbor.QueryRepositoriesRequest
	2, // 2: codehorse.mkube.harbor.RPC.QueryArtifacts:input_type -> codehorse.mkube.harbor.QueryArtifactsRequest
	3, // 3: codehorse.mkube.harbor.RPC.MatchImage:input_type -> codehorse.mkube.harbor.MatchImageRequest
	4, // 4: codehorse.mkube.harbor.RPC.QueryProjects:output_type -> codehorse.mkube.harbor.Projects
	5, // 5: codehorse.mkube.harbor.RPC.QueryRepositories:output_type -> codehorse.mkube.harbor.Repositories
	6, // 6: codehorse.mkube.harbor.RPC.QueryArtifacts:output_type -> codehorse.mkube.harbor.Artifacts
	7, // 7: codehorse.mkube.harbor.RPC.MatchImage:output_type -> codehorse.mkube.harbor.MatchImages
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_apps_harbor_pb_rpc_proto_init() }
func file_apps_harbor_pb_rpc_proto_init() {
	if File_apps_harbor_pb_rpc_proto != nil {
		return
	}
	file_apps_harbor_pb_harbor_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_apps_harbor_pb_rpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryProjectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_harbor_pb_rpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRepositoriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_harbor_pb_rpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryArtifactsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_harbor_pb_rpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_apps_harbor_pb_rpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_apps_harbor_pb_rpc_proto_goTypes,
		DependencyIndexes: file_apps_harbor_pb_rpc_proto_depIdxs,
		MessageInfos:      file_apps_harbor_pb_rpc_proto_msgTypes,
	}.Build()
	File_apps_harbor_pb_rpc_proto = out.File
	file_apps_harbor_pb_rpc_proto_rawDesc = nil
	file_apps_harbor_pb_rpc_proto_goTypes = nil
	file_apps_harbor_pb_rpc_proto_depIdxs = nil
}
