syntax = "proto3";

package codehorse.mcenter.user;

option go_package = "github.com/solodba/devcloud/mcenter/apps/user";

import "apps/user/pb/user.proto";
import "common/pb/github.com/solodba/mcube/pb/page/page.proto";

// 用户管理服务接口
service RPC {
    // 创建用户
    // rpc CreateUser(CreateUserRequest) returns(User);
    // 删除用户
    // rpc DeleteUser(DeleteUserRequest) returns(User);
    // 更新用户
    // rpc UpdateUser(UpdateUserRequest) returns(User);
    // 查询用户
    rpc Queryuser(QueryUserRequest) returns(UserSet);
    // 查询用户详情
    rpc DescribeUser(DescribeUserRequest) returns(User);
}

// 删除用户
message DeleteUserRequest {
    // @gotags: bson:"username" json:"username" validate:"required"
    string username = 1;
}

// 更新用户
message UpdateUserRequest {
    // @gotags: bson:"username" json:"username" validate:"required"
    string username = 1;
    // @gotags: bson:"password" json:"password" validate:"required"
    string password = 2;
}

// 查询用户
message QueryUserRequest {
    // @gotags: bson:",inline" json:"page"
    codehorse.mcube.page.PageRequest page = 1;
    // @gotags: bson:"keywords" json:"keywords"
    string keywords = 2;
}

// 定义查询用户详情方式枚举类型
enum DESCRIBE_BY {
    USERNAME = 0;
    USER_ID = 1;
}

// 查询用户详情
message DescribeUserRequest {
    // @gotags: bson:"describe_type" json:"describe_type"
    DESCRIBE_BY describe_type = 1;
    // @gotags: bson:"describe_value" json:"describe_value"
    string describe_value = 2;
}