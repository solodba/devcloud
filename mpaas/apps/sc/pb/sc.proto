syntax = "proto3";

package codehorse.mpaas.sc;

option go_package = "github.com/solodba/devcloud/mpaas/apps/sc";

// 导入外部包
import "common/pb/github.com/solodba/mcube/pb/meta/meta.proto";

// CreateSCRequest结构体
message CreateSCRequest {
    // gotags: bson:"name" json:"name"
    string Name = 1;
    // gotags: bson:"namespace" json:"namespace"
    string Namespace = 2;
    // gotags: bson:"labels" json:"labels"
    repeated ListMapItem Labels = 3;
    // gotags: bson:"provisioner" json:"provisioner"
    string Provisioner = 4;
    // gotags: bson:"mountOptions" json:"mountOptions"
    repeated string MountOptions = 5;
    // gotags: bson:"parameters" json:"parameters"
    repeated ListMapItem Parameters  = 6;
    // gotags: bson:"reClaimPolicy" json:"reClaimPolicy"
    string ReClaimPolicy = 7;
    // gotags: bson:"allowVolumeExpansion" json:"allowVolumeExpansion"
    bool AllowVolumeExpansion = 8;
    // gotags: bson:"volumeBindingMode" json:"volumeBindingMode"
    string VolumeBindingMode = 9;
}

// 通用键值对结构体
message ListMapItem {
    // @gotags: bson:"key" json:"key"
    string Key = 1;
    // @gotags: bson:"value" json:"value"
    string Value = 2;
}

// SC结构体
message SC {
    // @gotags: bson:",inline" json:"meta"
    codehorse.mcube.meta.Meta Meta = 1;
    // @gotags: bson:",inline" json:"sc"
    CreateSCRequest SC = 2;
}

// SCSetItem结构体
message SCSetItem {
    // gotags: bson:"name" json:"name"
    string Name = 1;
    // gotags: bson:"namespace" json:"namespace"
    string Namespace = 2;
    // gotags: bson:"labels" json:"labels"
    repeated ListMapItem Labels = 3;
    // gotags: bson:"provisioner" json:"provisioner"
    string Provisioner = 4;
    // gotags: bson:"mountOptions" json:"mountOptions"
    repeated string MountOptions = 5;
    // gotags: bson:"parameters" json:"parameters"
    repeated ListMapItem Parameters  = 6;
    // gotags: bson:"reClaimPolicy" json:"reClaimPolicy"
    string ReClaimPolicy = 7;
    // gotags: bson:"allowVolumeExpansion" json:"allowVolumeExpansion"
    bool AllowVolumeExpansion = 8;
    // gotags: bson:"volumeBindingMode" json:"volumeBindingMode"
    string VolumeBindingMode = 9;
    // gotags: bson:"age" json:"age"
    int64 Age = 10;
}

// SCSet结构体
message SCSet {
    // gotags: bson:"total" json:"total"
    int64 Total = 1;
    // gotags: bson:"items" json:"items"
    repeated SCSetItem Items = 2;
}