// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: apps/pod/pb/pod.proto

package pod

import (
	meta "github.com/solodba/mcube/pb/meta"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 创建Pod请求
type CreatePodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:",inline" json:"pod"
	Pod *Pod `protobuf:"bytes,1,opt,name=pod,proto3" json:"pod" bson:",inline"`
}

func (x *CreatePodRequest) Reset() {
	*x = CreatePodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_pod_pb_pod_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePodRequest) ProtoMessage() {}

func (x *CreatePodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apps_pod_pb_pod_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePodRequest.ProtoReflect.Descriptor instead.
func (*CreatePodRequest) Descriptor() ([]byte, []int) {
	return file_apps_pod_pb_pod_proto_rawDescGZIP(), []int{0}
}

func (x *CreatePodRequest) GetPod() *Pod {
	if x != nil {
		return x.Pod
	}
	return nil
}

// Pod结构体
type Pod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:",inline" json:"meta"
	Meta *meta.Meta `protobuf:"bytes,1,opt,name=Meta,proto3" json:"meta" bson:",inline"`
	// @gotags: bson:",inline" json:"base"
	Base *Base `protobuf:"bytes,2,opt,name=Base,proto3" json:"base" bson:",inline"`
	// @gotags: bson:"volumes" json:"volumes"
	Volumes []*Volume `protobuf:"bytes,3,rep,name=Volumes,proto3" json:"volumes" bson:"volumes"`
	// @gotags: bson:",inline" json:"netWorking"
	NetWorking *NetWorking `protobuf:"bytes,4,opt,name=NetWorking,proto3" json:"netWorking" bson:",inline"`
	// @gotags: bson:"initContainers" json:"initContainers"
	InitContainers []*Container `protobuf:"bytes,5,rep,name=InitContainers,proto3" json:"initContainers" bson:"initContainers"`
	// @gotags: bson:"containers" json:"containers"
	Containers []*Container `protobuf:"bytes,6,rep,name=Containers,proto3" json:"containers" bson:"containers"`
	// @gotags: bson:"tolerations" json:"tolerations"
	Tolerations []*Tolerations `protobuf:"bytes,7,rep,name=Tolerations,proto3" json:"tolerations" bson:"tolerations"`
	// @gotags: bson:",inline" json:"nodeScheduling"
	NodeScheduling *NodeScheduling `protobuf:"bytes,8,opt,name=NodeScheduling,proto3" json:"nodeScheduling" bson:",inline"`
}

func (x *Pod) Reset() {
	*x = Pod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_pod_pb_pod_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pod) ProtoMessage() {}

func (x *Pod) ProtoReflect() protoreflect.Message {
	mi := &file_apps_pod_pb_pod_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pod.ProtoReflect.Descriptor instead.
func (*Pod) Descriptor() ([]byte, []int) {
	return file_apps_pod_pb_pod_proto_rawDescGZIP(), []int{1}
}

func (x *Pod) GetMeta() *meta.Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Pod) GetBase() *Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *Pod) GetVolumes() []*Volume {
	if x != nil {
		return x.Volumes
	}
	return nil
}

func (x *Pod) GetNetWorking() *NetWorking {
	if x != nil {
		return x.NetWorking
	}
	return nil
}

func (x *Pod) GetInitContainers() []*Container {
	if x != nil {
		return x.InitContainers
	}
	return nil
}

func (x *Pod) GetContainers() []*Container {
	if x != nil {
		return x.Containers
	}
	return nil
}

func (x *Pod) GetTolerations() []*Tolerations {
	if x != nil {
		return x.Tolerations
	}
	return nil
}

func (x *Pod) GetNodeScheduling() *NodeScheduling {
	if x != nil {
		return x.NodeScheduling
	}
	return nil
}

// Tolerations结构体
type Tolerations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"key" json:"key"
	Key string `protobuf:"bytes,1,opt,name=Key,proto3" json:"key" bson:"key"`
	// @gotags: bson:"value" json:"value"
	Value string `protobuf:"bytes,2,opt,name=Value,proto3" json:"value" bson:"value"`
	// @gotags: bson:"operator" json:"operator"
	Operator string `protobuf:"bytes,3,opt,name=Operator,proto3" json:"operator" bson:"operator"`
}

func (x *Tolerations) Reset() {
	*x = Tolerations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_pod_pb_pod_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tolerations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tolerations) ProtoMessage() {}

func (x *Tolerations) ProtoReflect() protoreflect.Message {
	mi := &file_apps_pod_pb_pod_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tolerations.ProtoReflect.Descriptor instead.
func (*Tolerations) Descriptor() ([]byte, []int) {
	return file_apps_pod_pb_pod_proto_rawDescGZIP(), []int{2}
}

func (x *Tolerations) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Tolerations) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Tolerations) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

// 通用键值对结构体
type ListMapItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"key" json:"key"
	Key string `protobuf:"bytes,1,opt,name=Key,proto3" json:"key" bson:"key"`
	// @gotags: bson:"value" json:"value"
	Value string `protobuf:"bytes,2,opt,name=Value,proto3" json:"value" bson:"value"`
}

func (x *ListMapItem) Reset() {
	*x = ListMapItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_pod_pb_pod_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMapItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMapItem) ProtoMessage() {}

func (x *ListMapItem) ProtoReflect() protoreflect.Message {
	mi := &file_apps_pod_pb_pod_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMapItem.ProtoReflect.Descriptor instead.
func (*ListMapItem) Descriptor() ([]byte, []int) {
	return file_apps_pod_pb_pod_proto_rawDescGZIP(), []int{3}
}

func (x *ListMapItem) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ListMapItem) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Base结构体
type Base struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"name" json:"name" validate:"required"
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"name" bson:"name" validate:"required"`
	// @gotags: bson:"namespace" json:"namespace"
	Namespace string `protobuf:"bytes,2,opt,name=Namespace,proto3" json:"namespace" bson:"namespace"`
	// @gotags: bson:"labels" json:"labels"
	Labels []*ListMapItem `protobuf:"bytes,3,rep,name=Labels,proto3" json:"labels" bson:"labels"`
	// @gotags: bson:"restartPolicy" json:"restartPolicy"
	RestartPolicy string `protobuf:"bytes,4,opt,name=RestartPolicy,proto3" json:"restartPolicy" bson:"restartPolicy"`
}

func (x *Base) Reset() {
	*x = Base{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_pod_pb_pod_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Base) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Base) ProtoMessage() {}

func (x *Base) ProtoReflect() protoreflect.Message {
	mi := &file_apps_pod_pb_pod_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Base.ProtoReflect.Descriptor instead.
func (*Base) Descriptor() ([]byte, []int) {
	return file_apps_pod_pb_pod_proto_rawDescGZIP(), []int{4}
}

func (x *Base) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Base) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Base) GetLabels() []*ListMapItem {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Base) GetRestartPolicy() string {
	if x != nil {
		return x.RestartPolicy
	}
	return ""
}

// Volume结构体
type Volume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"name" json:"name"
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"name" bson:"name"`
	// @gotags: bson:"type" json:"type"
	Type string `protobuf:"bytes,2,opt,name=Type,proto3" json:"type" bson:"type"`
	// @gotags: bson:"configMapRefVolume" json:"configMapRefVolume"
	ConfigMapRefVolume *ConfigMapRefVolume `protobuf:"bytes,3,opt,name=ConfigMapRefVolume,proto3" json:"configMapRefVolume" bson:"configMapRefVolume"`
	// @gotags: bson:"secretRefVolume" json:"secretRefVolume"
	SecretRefVolume *SecretRefVolume `protobuf:"bytes,4,opt,name=SecretRefVolume,proto3" json:"secretRefVolume" bson:"secretRefVolume"`
	// @gotags: bson:"hostPathVolume" json:"hostPathVolume"
	HostPathVolume *HostPathVolume `protobuf:"bytes,5,opt,name=HostPathVolume,proto3" json:"hostPathVolume" bson:"hostPathVolume"`
	// @gotags: bson:"downwardAPIVolume" json:"downwardAPIVolume"
	DownwardAPIVolume *DownwardAPIVolume `protobuf:"bytes,6,opt,name=DownwardAPIVolume,proto3" json:"downwardAPIVolume" bson:"downwardAPIVolume"`
	// @gotags: bson:"PVCVolume" json:"PVCVolume"
	PVCVolume *PVCVolume `protobuf:"bytes,7,opt,name=PVCVolume,proto3" json:"PVCVolume" bson:"PVCVolume"`
}

func (x *Volume) Reset() {
	*x = Volume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_pod_pb_pod_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Volume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Volume) ProtoMessage() {}

func (x *Volume) ProtoReflect() protoreflect.Message {
	mi := &file_apps_pod_pb_pod_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Volume.ProtoReflect.Descriptor instead.
func (*Volume) Descriptor() ([]byte, []int) {
	return file_apps_pod_pb_pod_proto_rawDescGZIP(), []int{5}
}

func (x *Volume) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Volume) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Volume) GetConfigMapRefVolume() *ConfigMapRefVolume {
	if x != nil {
		return x.ConfigMapRefVolume
	}
	return nil
}

func (x *Volume) GetSecretRefVolume() *SecretRefVolume {
	if x != nil {
		return x.SecretRefVolume
	}
	return nil
}

func (x *Volume) GetHostPathVolume() *HostPathVolume {
	if x != nil {
		return x.HostPathVolume
	}
	return nil
}

func (x *Volume) GetDownwardAPIVolume() *DownwardAPIVolume {
	if x != nil {
		return x.DownwardAPIVolume
	}
	return nil
}

func (x *Volume) GetPVCVolume() *PVCVolume {
	if x != nil {
		return x.PVCVolume
	}
	return nil
}

// ConfigMapRefVolume结构体
type ConfigMapRefVolume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"name" json:"name"
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"name" bson:"name"`
	// @gotags: bson:"optional" json:"optional"
	Optional bool `protobuf:"varint,2,opt,name=Optional,proto3" json:"optional" bson:"optional"`
}

func (x *ConfigMapRefVolume) Reset() {
	*x = ConfigMapRefVolume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_pod_pb_pod_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigMapRefVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigMapRefVolume) ProtoMessage() {}

func (x *ConfigMapRefVolume) ProtoReflect() protoreflect.Message {
	mi := &file_apps_pod_pb_pod_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigMapRefVolume.ProtoReflect.Descriptor instead.
func (*ConfigMapRefVolume) Descriptor() ([]byte, []int) {
	return file_apps_pod_pb_pod_proto_rawDescGZIP(), []int{6}
}

func (x *ConfigMapRefVolume) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConfigMapRefVolume) GetOptional() bool {
	if x != nil {
		return x.Optional
	}
	return false
}

// SecretRefVolume结构体
type SecretRefVolume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"name" json:"name"
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"name" bson:"name"`
	// @gotags: bson:"optional" json:"optional"
	Optional bool `protobuf:"varint,2,opt,name=Optional,proto3" json:"optional" bson:"optional"`
}

func (x *SecretRefVolume) Reset() {
	*x = SecretRefVolume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_pod_pb_pod_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretRefVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretRefVolume) ProtoMessage() {}

func (x *SecretRefVolume) ProtoReflect() protoreflect.Message {
	mi := &file_apps_pod_pb_pod_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretRefVolume.ProtoReflect.Descriptor instead.
func (*SecretRefVolume) Descriptor() ([]byte, []int) {
	return file_apps_pod_pb_pod_proto_rawDescGZIP(), []int{7}
}

func (x *SecretRefVolume) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SecretRefVolume) GetOptional() bool {
	if x != nil {
		return x.Optional
	}
	return false
}

// HostPathVolume结构体
type HostPathVolume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"type" json:"type"
	Type string `protobuf:"bytes,1,opt,name=Type,proto3" json:"type" bson:"type"`
	// @gotags: bson:"path" json:"path"
	Path string `protobuf:"bytes,2,opt,name=Path,proto3" json:"path" bson:"path"`
}

func (x *HostPathVolume) Reset() {
	*x = HostPathVolume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_pod_pb_pod_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostPathVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostPathVolume) ProtoMessage() {}

func (x *HostPathVolume) ProtoReflect() protoreflect.Message {
	mi := &file_apps_pod_pb_pod_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostPathVolume.ProtoReflect.Descriptor instead.
func (*HostPathVolume) Descriptor() ([]byte, []int) {
	return file_apps_pod_pb_pod_proto_rawDescGZIP(), []int{8}
}

func (x *HostPathVolume) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *HostPathVolume) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// DownwardAPIVolumeItem结构体
type DownwardAPIVolumeItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"path" json:"path"
	Path string `protobuf:"bytes,1,opt,name=Path,proto3" json:"path" bson:"path"`
	// @gotags: bson:"fieldRefPath" json:"fieldRefPath"
	FieldRefPath string `protobuf:"bytes,2,opt,name=FieldRefPath,proto3" json:"fieldRefPath" bson:"fieldRefPath"`
}

func (x *DownwardAPIVolumeItem) Reset() {
	*x = DownwardAPIVolumeItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_pod_pb_pod_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownwardAPIVolumeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownwardAPIVolumeItem) ProtoMessage() {}

func (x *DownwardAPIVolumeItem) ProtoReflect() protoreflect.Message {
	mi := &file_apps_pod_pb_pod_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownwardAPIVolumeItem.ProtoReflect.Descriptor instead.
func (*DownwardAPIVolumeItem) Descriptor() ([]byte, []int) {
	return file_apps_pod_pb_pod_proto_rawDescGZIP(), []int{9}
}

func (x *DownwardAPIVolumeItem) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DownwardAPIVolumeItem) GetFieldRefPath() string {
	if x != nil {
		return x.FieldRefPath
	}
	return ""
}

// DownwardAPIVolume结构体
type DownwardAPIVolume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"items" json:"items"
	Items []*DownwardAPIVolumeItem `protobuf:"bytes,1,rep,name=Items,proto3" json:"items" bson:"items"`
}

func (x *DownwardAPIVolume) Reset() {
	*x = DownwardAPIVolume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_pod_pb_pod_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownwardAPIVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownwardAPIVolume) ProtoMessage() {}

func (x *DownwardAPIVolume) ProtoReflect() protoreflect.Message {
	mi := &file_apps_pod_pb_pod_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownwardAPIVolume.ProtoReflect.Descriptor instead.
func (*DownwardAPIVolume) Descriptor() ([]byte, []int) {
	return file_apps_pod_pb_pod_proto_rawDescGZIP(), []int{10}
}

func (x *DownwardAPIVolume) GetItems() []*DownwardAPIVolumeItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// PVCVolume结构体
type PVCVolume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"name" json:"name"
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"name" bson:"name"`
}

func (x *PVCVolume) Reset() {
	*x = PVCVolume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_pod_pb_pod_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PVCVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PVCVolume) ProtoMessage() {}

func (x *PVCVolume) ProtoReflect() protoreflect.Message {
	mi := &file_apps_pod_pb_pod_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PVCVolume.ProtoReflect.Descriptor instead.
func (*PVCVolume) Descriptor() ([]byte, []int) {
	return file_apps_pod_pb_pod_proto_rawDescGZIP(), []int{11}
}

func (x *PVCVolume) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// NetWorking结构体
type NetWorking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"hostNetwork" json:"hostNetwork"
	HostNetwork bool `protobuf:"varint,1,opt,name=HostNetwork,proto3" json:"hostNetwork" bson:"hostNetwork"`
	// @gotags: bson:"hostName" json:"hostName"
	HostName string `protobuf:"bytes,2,opt,name=HostName,proto3" json:"hostName" bson:"hostName"`
	// @gotags: bson:"dnsPolicy" json:"dnsPolicy"
	DnsPolicy string `protobuf:"bytes,3,opt,name=DnsPolicy,proto3" json:"dnsPolicy" bson:"dnsPolicy"`
	// @gotags: bson:",inline" json:"dnsConfig"
	DnsConfig *DnsConfig `protobuf:"bytes,4,opt,name=DnsConfig,proto3" json:"dnsConfig" bson:",inline"`
	// @gotags: bson:"hostAliases" json:"hostAliases"
	HostAliases []*ListMapItem `protobuf:"bytes,5,rep,name=HostAliases,proto3" json:"hostAliases" bson:"hostAliases"`
}

func (x *NetWorking) Reset() {
	*x = NetWorking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_pod_pb_pod_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetWorking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetWorking) ProtoMessage() {}

func (x *NetWorking) ProtoReflect() protoreflect.Message {
	mi := &file_apps_pod_pb_pod_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetWorking.ProtoReflect.Descriptor instead.
func (*NetWorking) Descriptor() ([]byte, []int) {
	return file_apps_pod_pb_pod_proto_rawDescGZIP(), []int{12}
}

func (x *NetWorking) GetHostNetwork() bool {
	if x != nil {
		return x.HostNetwork
	}
	return false
}

func (x *NetWorking) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

func (x *NetWorking) GetDnsPolicy() string {
	if x != nil {
		return x.DnsPolicy
	}
	return ""
}

func (x *NetWorking) GetDnsConfig() *DnsConfig {
	if x != nil {
		return x.DnsConfig
	}
	return nil
}

func (x *NetWorking) GetHostAliases() []*ListMapItem {
	if x != nil {
		return x.HostAliases
	}
	return nil
}

// DnsConfig结构体
type DnsConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"nameservers" json:"nameservers"
	Nameservers []string `protobuf:"bytes,1,rep,name=Nameservers,proto3" json:"nameservers" bson:"nameservers"`
}

func (x *DnsConfig) Reset() {
	*x = DnsConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_pod_pb_pod_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DnsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DnsConfig) ProtoMessage() {}

func (x *DnsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_apps_pod_pb_pod_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DnsConfig.ProtoReflect.Descriptor instead.
func (*DnsConfig) Descriptor() ([]byte, []int) {
	return file_apps_pod_pb_pod_proto_rawDescGZIP(), []int{13}
}

func (x *DnsConfig) GetNameservers() []string {
	if x != nil {
		return x.Nameservers
	}
	return nil
}

// Container结构体
type Container struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"name" json:"name" validate:"required"
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"name" bson:"name" validate:"required"`
	// @gotags: bson:"image" json:"image" validate:"required"
	Image string `protobuf:"bytes,2,opt,name=Image,proto3" json:"image" bson:"image" validate:"required"`
	// @gotags: bson:"imagePullPolicy" json:"imagePullPolicy"
	ImagePullPolicy string `protobuf:"bytes,3,opt,name=ImagePullPolicy,proto3" json:"imagePullPolicy" bson:"imagePullPolicy"`
	// @gotags: bson:"tty" json:"tty"
	Tty bool `protobuf:"varint,4,opt,name=Tty,proto3" json:"tty" bson:"tty"`
	// @gotags: bson:"ports" json:"ports"
	Ports []*ContainerPort `protobuf:"bytes,5,rep,name=Ports,proto3" json:"ports" bson:"ports"`
	// @gotags: bson:"workingDir" json:"workingDir"
	WorkingDir string `protobuf:"bytes,6,opt,name=WorkingDir,proto3" json:"workingDir" bson:"workingDir"`
	// @gotags: bson:"command" json:"command"
	Command []string `protobuf:"bytes,7,rep,name=Command,proto3" json:"command" bson:"command"`
	// @gotags: bson:"args" json:"args"
	Args []string `protobuf:"bytes,8,rep,name=Args,proto3" json:"args" bson:"args"`
	// @gotags: bson:"envs" json:"envs"
	Envs []*EnvVar `protobuf:"bytes,9,rep,name=Envs,proto3" json:"envs" bson:"envs"`
	// @gotags: bson:"envsFrom" json:"envsFrom"
	EnvsFrom []*EnvVarFromResource `protobuf:"bytes,10,rep,name=EnvsFrom,proto3" json:"envsFrom" bson:"envsFrom"`
	// @gotags: bson:"privileged" json:"privileged"
	Privileged bool `protobuf:"varint,11,opt,name=Privileged,proto3" json:"privileged" bson:"privileged"`
	// @gotags: bson:",inline" json:"resources"
	Resources *Resources `protobuf:"bytes,12,opt,name=Resources,proto3" json:"resources" bson:",inline"`
	// @gotags: bson:"volumeMounts" json:"volumeMounts"
	VolumeMounts []*VolumeMounts `protobuf:"bytes,13,rep,name=VolumeMounts,proto3" json:"volumeMounts" bson:"volumeMounts"`
	// @gotags: bson:"startupProbe" json:"startupProbe"
	StartupProbe *ContainerProbe `protobuf:"bytes,14,opt,name=StartupProbe,proto3" json:"startupProbe" bson:"startupProbe"`
	// @gotags: bson:"livenessProbe" json:"livenessProbe"
	LivenessProbe *ContainerProbe `protobuf:"bytes,15,opt,name=LivenessProbe,proto3" json:"livenessProbe" bson:"livenessProbe"`
	// @gotags: bson:"readinessProbe" json:"readinessProbe"
	ReadinessProbe *ContainerProbe `protobuf:"bytes,16,opt,name=ReadinessProbe,proto3" json:"readinessProbe" bson:"readinessProbe"`
}

func (x *Container) Reset() {
	*x = Container{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_pod_pb_pod_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Container) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Container) ProtoMessage() {}

func (x *Container) ProtoReflect() protoreflect.Message {
	mi := &file_apps_pod_pb_pod_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Container.ProtoReflect.Descriptor instead.
func (*Container) Descriptor() ([]byte, []int) {
	return file_apps_pod_pb_pod_proto_rawDescGZIP(), []int{14}
}

func (x *Container) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Container) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Container) GetImagePullPolicy() string {
	if x != nil {
		return x.ImagePullPolicy
	}
	return ""
}

func (x *Container) GetTty() bool {
	if x != nil {
		return x.Tty
	}
	return false
}

func (x *Container) GetPorts() []*ContainerPort {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *Container) GetWorkingDir() string {
	if x != nil {
		return x.WorkingDir
	}
	return ""
}

func (x *Container) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *Container) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *Container) GetEnvs() []*EnvVar {
	if x != nil {
		return x.Envs
	}
	return nil
}

func (x *Container) GetEnvsFrom() []*EnvVarFromResource {
	if x != nil {
		return x.EnvsFrom
	}
	return nil
}

func (x *Container) GetPrivileged() bool {
	if x != nil {
		return x.Privileged
	}
	return false
}

func (x *Container) GetResources() *Resources {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *Container) GetVolumeMounts() []*VolumeMounts {
	if x != nil {
		return x.VolumeMounts
	}
	return nil
}

func (x *Container) GetStartupProbe() *ContainerProbe {
	if x != nil {
		return x.StartupProbe
	}
	return nil
}

func (x *Container) GetLivenessProbe() *ContainerProbe {
	if x != nil {
		return x.LivenessProbe
	}
	return nil
}

func (x *Container) GetReadinessProbe() *ContainerProbe {
	if x != nil {
		return x.ReadinessProbe
	}
	return nil
}

// EnvVar结构体
type EnvVar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"name" json:"name"
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"name" bson:"name"`
	// @gotags: bson:"refName" json:"refName"
	RefName string `protobuf:"bytes,2,opt,name=RefName,proto3" json:"refName" bson:"refName"`
	// @gotags: bson:"value" json:"value"
	Value string `protobuf:"bytes,3,opt,name=Value,proto3" json:"value" bson:"value"`
	// @gotags: bson:"type" json:"type"
	Type string `protobuf:"bytes,4,opt,name=Type,proto3" json:"type" bson:"type"`
}

func (x *EnvVar) Reset() {
	*x = EnvVar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_pod_pb_pod_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvVar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvVar) ProtoMessage() {}

func (x *EnvVar) ProtoReflect() protoreflect.Message {
	mi := &file_apps_pod_pb_pod_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvVar.ProtoReflect.Descriptor instead.
func (*EnvVar) Descriptor() ([]byte, []int) {
	return file_apps_pod_pb_pod_proto_rawDescGZIP(), []int{15}
}

func (x *EnvVar) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EnvVar) GetRefName() string {
	if x != nil {
		return x.RefName
	}
	return ""
}

func (x *EnvVar) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *EnvVar) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// EnvVarFromResource结构体
type EnvVarFromResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"name" json:"name"
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"name" bson:"name"`
	// @gotags: bson:"refType" json:"refType"
	RefType string `protobuf:"bytes,2,opt,name=RefType,proto3" json:"refType" bson:"refType"`
	// @gotags: bson:"prefix" json:"prefix"
	Prefix string `protobuf:"bytes,3,opt,name=Prefix,proto3" json:"prefix" bson:"prefix"`
}

func (x *EnvVarFromResource) Reset() {
	*x = EnvVarFromResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_pod_pb_pod_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvVarFromResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvVarFromResource) ProtoMessage() {}

func (x *EnvVarFromResource) ProtoReflect() protoreflect.Message {
	mi := &file_apps_pod_pb_pod_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvVarFromResource.ProtoReflect.Descriptor instead.
func (*EnvVarFromResource) Descriptor() ([]byte, []int) {
	return file_apps_pod_pb_pod_proto_rawDescGZIP(), []int{16}
}

func (x *EnvVarFromResource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EnvVarFromResource) GetRefType() string {
	if x != nil {
		return x.RefType
	}
	return ""
}

func (x *EnvVarFromResource) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

// ContainerPort结构体
type ContainerPort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"name" json:"name"
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"name" bson:"name"`
	// @gotags: bson:"containerPort" json:"containerPort"
	ContainerPort int32 `protobuf:"varint,2,opt,name=ContainerPort,proto3" json:"containerPort" bson:"containerPort"`
	// @gotags: bson:"hostPort" json:"hostPort"
	HostPort int32 `protobuf:"varint,3,opt,name=HostPort,proto3" json:"hostPort" bson:"hostPort"`
}

func (x *ContainerPort) Reset() {
	*x = ContainerPort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_pod_pb_pod_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerPort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerPort) ProtoMessage() {}

func (x *ContainerPort) ProtoReflect() protoreflect.Message {
	mi := &file_apps_pod_pb_pod_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerPort.ProtoReflect.Descriptor instead.
func (*ContainerPort) Descriptor() ([]byte, []int) {
	return file_apps_pod_pb_pod_proto_rawDescGZIP(), []int{17}
}

func (x *ContainerPort) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerPort) GetContainerPort() int32 {
	if x != nil {
		return x.ContainerPort
	}
	return 0
}

func (x *ContainerPort) GetHostPort() int32 {
	if x != nil {
		return x.HostPort
	}
	return 0
}

// Resources结构体
type Resources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"enable" json:"enable"
	Enable bool `protobuf:"varint,1,opt,name=Enable,proto3" json:"enable" bson:"enable"`
	// @gotags: bson:"memRequest" json:"memRequest"
	MemRequest int32 `protobuf:"varint,2,opt,name=MemRequest,proto3" json:"memRequest" bson:"memRequest"`
	// @gotags: bson:"memLimit" json:"memLimit"
	MemLimit int32 `protobuf:"varint,3,opt,name=MemLimit,proto3" json:"memLimit" bson:"memLimit"`
	// @gotags: bson:"cpuRequest" json:"cpuRequest"
	CpuRequest int32 `protobuf:"varint,4,opt,name=CpuRequest,proto3" json:"cpuRequest" bson:"cpuRequest"`
	// @gotags: bson:"cpuLimit" json:"cpuLimit"
	CpuLimit int32 `protobuf:"varint,5,opt,name=CpuLimit,proto3" json:"cpuLimit" bson:"cpuLimit"`
}

func (x *Resources) Reset() {
	*x = Resources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_pod_pb_pod_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resources) ProtoMessage() {}

func (x *Resources) ProtoReflect() protoreflect.Message {
	mi := &file_apps_pod_pb_pod_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resources.ProtoReflect.Descriptor instead.
func (*Resources) Descriptor() ([]byte, []int) {
	return file_apps_pod_pb_pod_proto_rawDescGZIP(), []int{18}
}

func (x *Resources) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *Resources) GetMemRequest() int32 {
	if x != nil {
		return x.MemRequest
	}
	return 0
}

func (x *Resources) GetMemLimit() int32 {
	if x != nil {
		return x.MemLimit
	}
	return 0
}

func (x *Resources) GetCpuRequest() int32 {
	if x != nil {
		return x.CpuRequest
	}
	return 0
}

func (x *Resources) GetCpuLimit() int32 {
	if x != nil {
		return x.CpuLimit
	}
	return 0
}

// VolumeMounts结构体
type VolumeMounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"mountName" json:"mountName"
	MountName string `protobuf:"bytes,1,opt,name=MountName,proto3" json:"mountName" bson:"mountName"`
	// @gotags: bson:"mountPath" json:"mountPath"
	MountPath string `protobuf:"bytes,2,opt,name=MountPath,proto3" json:"mountPath" bson:"mountPath"`
	// @gotags: bson:"readOnly" json:"readOnly"
	ReadOnly bool `protobuf:"varint,3,opt,name=ReadOnly,proto3" json:"readOnly" bson:"readOnly"`
}

func (x *VolumeMounts) Reset() {
	*x = VolumeMounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_pod_pb_pod_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VolumeMounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VolumeMounts) ProtoMessage() {}

func (x *VolumeMounts) ProtoReflect() protoreflect.Message {
	mi := &file_apps_pod_pb_pod_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VolumeMounts.ProtoReflect.Descriptor instead.
func (*VolumeMounts) Descriptor() ([]byte, []int) {
	return file_apps_pod_pb_pod_proto_rawDescGZIP(), []int{19}
}

func (x *VolumeMounts) GetMountName() string {
	if x != nil {
		return x.MountName
	}
	return ""
}

func (x *VolumeMounts) GetMountPath() string {
	if x != nil {
		return x.MountPath
	}
	return ""
}

func (x *VolumeMounts) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

// ContainerProbe结构体
type ContainerProbe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"enable" json:"enable"
	Enable bool `protobuf:"varint,1,opt,name=Enable,proto3" json:"enable" bson:"enable"`
	// @gotags: bson:"type" json:"type"
	Type string `protobuf:"bytes,2,opt,name=Type,proto3" json:"type" bson:"type"`
	// @gotags: bson:"httpGet" json:"httpGet"
	HttpGet *ProbeHttpGet `protobuf:"bytes,3,opt,name=HttpGet,proto3" json:"httpGet" bson:"httpGet"`
	// @gotags: bson:"exec" json:"exec"
	Exec *ProbeCommand `protobuf:"bytes,4,opt,name=Exec,proto3" json:"exec" bson:"exec"`
	// @gotags: bson:"tcpSocket" json:"tcpSocket"
	TcpSocket *ProbeTcpSocket `protobuf:"bytes,5,opt,name=TcpSocket,proto3" json:"tcpSocket" bson:"tcpSocket"`
	// @gotags: bson:"probeTime" json:"probeTime"
	ProbeTime *ProbeTime `protobuf:"bytes,6,opt,name=ProbeTime,proto3" json:"probeTime" bson:"probeTime"`
}

func (x *ContainerProbe) Reset() {
	*x = ContainerProbe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_pod_pb_pod_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerProbe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerProbe) ProtoMessage() {}

func (x *ContainerProbe) ProtoReflect() protoreflect.Message {
	mi := &file_apps_pod_pb_pod_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerProbe.ProtoReflect.Descriptor instead.
func (*ContainerProbe) Descriptor() ([]byte, []int) {
	return file_apps_pod_pb_pod_proto_rawDescGZIP(), []int{20}
}

func (x *ContainerProbe) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *ContainerProbe) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ContainerProbe) GetHttpGet() *ProbeHttpGet {
	if x != nil {
		return x.HttpGet
	}
	return nil
}

func (x *ContainerProbe) GetExec() *ProbeCommand {
	if x != nil {
		return x.Exec
	}
	return nil
}

func (x *ContainerProbe) GetTcpSocket() *ProbeTcpSocket {
	if x != nil {
		return x.TcpSocket
	}
	return nil
}

func (x *ContainerProbe) GetProbeTime() *ProbeTime {
	if x != nil {
		return x.ProbeTime
	}
	return nil
}

// ProbeHttpGet结构体
type ProbeHttpGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"scheme" json:"scheme"
	Scheme string `protobuf:"bytes,1,opt,name=Scheme,proto3" json:"scheme" bson:"scheme"`
	// @gotags: bson:"host" json:"host"
	Host string `protobuf:"bytes,2,opt,name=Host,proto3" json:"host" bson:"host"`
	// @gotags: bson:"path" json:"path"
	Path string `protobuf:"bytes,3,opt,name=Path,proto3" json:"path" bson:"path"`
	// @gotags: bson:"port" json:"port"
	Port int32 `protobuf:"varint,4,opt,name=Port,proto3" json:"port" bson:"port"`
	// @gotags: bson:"httpHeaders" json:"httpHeaders"
	HttpHeaders []*ListMapItem `protobuf:"bytes,5,rep,name=HttpHeaders,proto3" json:"httpHeaders" bson:"httpHeaders"`
}

func (x *ProbeHttpGet) Reset() {
	*x = ProbeHttpGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_pod_pb_pod_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProbeHttpGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProbeHttpGet) ProtoMessage() {}

func (x *ProbeHttpGet) ProtoReflect() protoreflect.Message {
	mi := &file_apps_pod_pb_pod_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProbeHttpGet.ProtoReflect.Descriptor instead.
func (*ProbeHttpGet) Descriptor() ([]byte, []int) {
	return file_apps_pod_pb_pod_proto_rawDescGZIP(), []int{21}
}

func (x *ProbeHttpGet) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

func (x *ProbeHttpGet) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ProbeHttpGet) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ProbeHttpGet) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ProbeHttpGet) GetHttpHeaders() []*ListMapItem {
	if x != nil {
		return x.HttpHeaders
	}
	return nil
}

// ProbeCommand结构体
type ProbeCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"command" json:"command"
	Command []string `protobuf:"bytes,1,rep,name=Command,proto3" json:"command" bson:"command"`
}

func (x *ProbeCommand) Reset() {
	*x = ProbeCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_pod_pb_pod_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProbeCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProbeCommand) ProtoMessage() {}

func (x *ProbeCommand) ProtoReflect() protoreflect.Message {
	mi := &file_apps_pod_pb_pod_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProbeCommand.ProtoReflect.Descriptor instead.
func (*ProbeCommand) Descriptor() ([]byte, []int) {
	return file_apps_pod_pb_pod_proto_rawDescGZIP(), []int{22}
}

func (x *ProbeCommand) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

// ProbeTcpSocket结构体
type ProbeTcpSocket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"host" json:"host"
	Host string `protobuf:"bytes,1,opt,name=Host,proto3" json:"host" bson:"host"`
	// @gotags: bson:"port" json:"port"
	Port int32 `protobuf:"varint,2,opt,name=Port,proto3" json:"port" bson:"port"`
}

func (x *ProbeTcpSocket) Reset() {
	*x = ProbeTcpSocket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_pod_pb_pod_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProbeTcpSocket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProbeTcpSocket) ProtoMessage() {}

func (x *ProbeTcpSocket) ProtoReflect() protoreflect.Message {
	mi := &file_apps_pod_pb_pod_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProbeTcpSocket.ProtoReflect.Descriptor instead.
func (*ProbeTcpSocket) Descriptor() ([]byte, []int) {
	return file_apps_pod_pb_pod_proto_rawDescGZIP(), []int{23}
}

func (x *ProbeTcpSocket) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ProbeTcpSocket) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

// ProbeTime结构体
type ProbeTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"initialDelaySeconds" json:"initialDelaySeconds"
	InitialDelaySeconds int32 `protobuf:"varint,1,opt,name=InitialDelaySeconds,proto3" json:"initialDelaySeconds" bson:"initialDelaySeconds"`
	// @gotags: bson:"periodSeconds" json:"periodSeconds"
	PeriodSeconds int32 `protobuf:"varint,2,opt,name=PeriodSeconds,proto3" json:"periodSeconds" bson:"periodSeconds"`
	// @gotags: bson:"timeoutSeconds" json:"timeoutSeconds"
	TimeoutSeconds int32 `protobuf:"varint,3,opt,name=TimeoutSeconds,proto3" json:"timeoutSeconds" bson:"timeoutSeconds"`
	// @gotags: bson:"successThreshold" json:"successThreshold"
	SuccessThreshold int32 `protobuf:"varint,4,opt,name=SuccessThreshold,proto3" json:"successThreshold" bson:"successThreshold"`
	// @gotags: bson:"failureThreshold" json:"failureThreshold"
	FailureThreshold int32 `protobuf:"varint,5,opt,name=FailureThreshold,proto3" json:"failureThreshold" bson:"failureThreshold"`
}

func (x *ProbeTime) Reset() {
	*x = ProbeTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_pod_pb_pod_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProbeTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProbeTime) ProtoMessage() {}

func (x *ProbeTime) ProtoReflect() protoreflect.Message {
	mi := &file_apps_pod_pb_pod_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProbeTime.ProtoReflect.Descriptor instead.
func (*ProbeTime) Descriptor() ([]byte, []int) {
	return file_apps_pod_pb_pod_proto_rawDescGZIP(), []int{24}
}

func (x *ProbeTime) GetInitialDelaySeconds() int32 {
	if x != nil {
		return x.InitialDelaySeconds
	}
	return 0
}

func (x *ProbeTime) GetPeriodSeconds() int32 {
	if x != nil {
		return x.PeriodSeconds
	}
	return 0
}

func (x *ProbeTime) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *ProbeTime) GetSuccessThreshold() int32 {
	if x != nil {
		return x.SuccessThreshold
	}
	return 0
}

func (x *ProbeTime) GetFailureThreshold() int32 {
	if x != nil {
		return x.FailureThreshold
	}
	return 0
}

// NodeScheduling结构体
type NodeScheduling struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"type" json:"type"
	Type string `protobuf:"bytes,1,opt,name=Type,proto3" json:"type" bson:"type"`
	// @gotags: bson:"nodeName" json:"nodeName"
	NodeName string `protobuf:"bytes,2,opt,name=NodeName,proto3" json:"nodeName" bson:"nodeName"`
	// @gotags: bson:"nodeSelector" json:"nodeSelector"
	NodeSelector []*ListMapItem `protobuf:"bytes,3,rep,name=NodeSelector,proto3" json:"nodeSelector" bson:"nodeSelector"`
	// @gotags: bson:"nodeAffinity" json:"nodeAffinity"
	NodeAffinity []*NodeSelectorTermExpressions `protobuf:"bytes,4,rep,name=NodeAffinity,proto3" json:"nodeAffinity" bson:"nodeAffinity"`
}

func (x *NodeScheduling) Reset() {
	*x = NodeScheduling{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_pod_pb_pod_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeScheduling) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeScheduling) ProtoMessage() {}

func (x *NodeScheduling) ProtoReflect() protoreflect.Message {
	mi := &file_apps_pod_pb_pod_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeScheduling.ProtoReflect.Descriptor instead.
func (*NodeScheduling) Descriptor() ([]byte, []int) {
	return file_apps_pod_pb_pod_proto_rawDescGZIP(), []int{25}
}

func (x *NodeScheduling) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *NodeScheduling) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *NodeScheduling) GetNodeSelector() []*ListMapItem {
	if x != nil {
		return x.NodeSelector
	}
	return nil
}

func (x *NodeScheduling) GetNodeAffinity() []*NodeSelectorTermExpressions {
	if x != nil {
		return x.NodeAffinity
	}
	return nil
}

// NodeSelectorTermExpressions结构体
type NodeSelectorTermExpressions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"key" json:"key"
	Key string `protobuf:"bytes,1,opt,name=Key,proto3" json:"key" bson:"key"`
	// @gotags: bson:"values" json:"values"
	Value string `protobuf:"bytes,2,opt,name=Value,proto3" json:"values" bson:"values"`
	// @gotags: bson:"operator" json:"operator"
	Operator string `protobuf:"bytes,3,opt,name=Operator,proto3" json:"operator" bson:"operator"`
}

func (x *NodeSelectorTermExpressions) Reset() {
	*x = NodeSelectorTermExpressions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_pod_pb_pod_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeSelectorTermExpressions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeSelectorTermExpressions) ProtoMessage() {}

func (x *NodeSelectorTermExpressions) ProtoReflect() protoreflect.Message {
	mi := &file_apps_pod_pb_pod_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeSelectorTermExpressions.ProtoReflect.Descriptor instead.
func (*NodeSelectorTermExpressions) Descriptor() ([]byte, []int) {
	return file_apps_pod_pb_pod_proto_rawDescGZIP(), []int{26}
}

func (x *NodeSelectorTermExpressions) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *NodeSelectorTermExpressions) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *NodeSelectorTermExpressions) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

// PodListItem结构体
type PodListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"name" json:"name"
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"name" bson:"name"`
	// @gotags: bson:"Ready" json:"Ready"
	Ready string `protobuf:"bytes,2,opt,name=Ready,proto3" json:"Ready" bson:"Ready"`
	// @gotags: bson:"status" json:"status"
	Status string `protobuf:"bytes,3,opt,name=Status,proto3" json:"status" bson:"status"`
	// @gotags: bson:"restarts" json:"restarts"
	Restarts int32 `protobuf:"varint,4,opt,name=Restarts,proto3" json:"restarts" bson:"restarts"`
	// @gotags: bson:"age" json:"age"
	Age int64 `protobuf:"varint,5,opt,name=Age,proto3" json:"age" bson:"age"`
	// @gotags: bson:"IP" json:"IP"
	IP string `protobuf:"bytes,6,opt,name=IP,proto3" json:"IP" bson:"IP"`
	// @gotags: bson:"node" json:"node"
	Node string `protobuf:"bytes,7,opt,name=Node,proto3" json:"node" bson:"node"`
}

func (x *PodListItem) Reset() {
	*x = PodListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_pod_pb_pod_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodListItem) ProtoMessage() {}

func (x *PodListItem) ProtoReflect() protoreflect.Message {
	mi := &file_apps_pod_pb_pod_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodListItem.ProtoReflect.Descriptor instead.
func (*PodListItem) Descriptor() ([]byte, []int) {
	return file_apps_pod_pb_pod_proto_rawDescGZIP(), []int{27}
}

func (x *PodListItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PodListItem) GetReady() string {
	if x != nil {
		return x.Ready
	}
	return ""
}

func (x *PodListItem) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PodListItem) GetRestarts() int32 {
	if x != nil {
		return x.Restarts
	}
	return 0
}

func (x *PodListItem) GetAge() int64 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *PodListItem) GetIP() string {
	if x != nil {
		return x.IP
	}
	return ""
}

func (x *PodListItem) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

// PodSet结构体
type PodSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"total" json:"total"
	Total int64 `protobuf:"varint,1,opt,name=Total,proto3" json:"total" bson:"total"`
	// @gotags: bson:"items" json:"items"
	PodListItem []*PodListItem `protobuf:"bytes,2,rep,name=PodListItem,proto3" json:"items" bson:"items"`
}

func (x *PodSet) Reset() {
	*x = PodSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_pod_pb_pod_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodSet) ProtoMessage() {}

func (x *PodSet) ProtoReflect() protoreflect.Message {
	mi := &file_apps_pod_pb_pod_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodSet.ProtoReflect.Descriptor instead.
func (*PodSet) Descriptor() ([]byte, []int) {
	return file_apps_pod_pb_pod_proto_rawDescGZIP(), []int{28}
}

func (x *PodSet) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PodSet) GetPodListItem() []*PodListItem {
	if x != nil {
		return x.PodListItem
	}
	return nil
}

var File_apps_pod_pb_pod_proto protoreflect.FileDescriptor

var file_apps_pod_pb_pod_proto_rawDesc = []byte{
	0x0a, 0x15, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x70, 0x6f, 0x64, 0x2f, 0x70, 0x62, 0x2f, 0x70, 0x6f,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x6f, 0x72,
	0x73, 0x65, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x70, 0x6f, 0x64, 0x1a, 0x35, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x62, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x64, 0x62, 0x61, 0x2f, 0x6d, 0x63, 0x75, 0x62, 0x65,
	0x2f, 0x70, 0x62, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x3e, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x03, 0x70, 0x6f, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65,
	0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x50, 0x6f, 0x64, 0x52, 0x03,
	0x70, 0x6f, 0x64, 0x22, 0xf5, 0x03, 0x0a, 0x03, 0x50, 0x6f, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x4d,
	0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x64, 0x65,
	0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x6d, 0x63, 0x75, 0x62, 0x65, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x04, 0x42,
	0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x64, 0x65,
	0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x70, 0x6f, 0x64, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x42, 0x61, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f,
	0x64, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x70, 0x6f,
	0x64, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x07, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x73, 0x12, 0x3f, 0x0a, 0x0a, 0x4e, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x6f, 0x72, 0x73,
	0x65, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x4e, 0x65, 0x74, 0x57,
	0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x0a, 0x4e, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x12, 0x46, 0x0a, 0x0e, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x64,
	0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x70, 0x6f, 0x64,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x0e, 0x49, 0x6e, 0x69, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x3e, 0x0a, 0x0a, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73,
	0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x0a,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x42, 0x0a, 0x0b, 0x54, 0x6f,
	0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x6d, 0x70, 0x61, 0x61,
	0x73, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x54, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x0b, 0x54, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4b,
	0x0a, 0x0e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x6f, 0x72,
	0x73, 0x65, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x0e, 0x4e, 0x6f, 0x64,
	0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x22, 0x51, 0x0a, 0x0b, 0x54,
	0x6f, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x35,
	0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a,
	0x03, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x98, 0x01, 0x0a, 0x04, 0x42, 0x61, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x38, 0x0a, 0x06, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x6d, 0x70, 0x61,
	0x61, 0x73, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x70, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x06, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x22, 0xba, 0x03, 0x0a, 0x06, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x57, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70,
	0x52, 0x65, 0x66, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x6d, 0x70, 0x61, 0x61,
	0x73, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x52,
	0x65, 0x66, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x12, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x4d, 0x61, 0x70, 0x52, 0x65, 0x66, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x4e, 0x0a, 0x0f,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x66, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x6f, 0x72, 0x73,
	0x65, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x52, 0x65, 0x66, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x0f, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x52, 0x65, 0x66, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x4b, 0x0a, 0x0e,
	0x48, 0x6f, 0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65,
	0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x50,
	0x61, 0x74, 0x68, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x0e, 0x48, 0x6f, 0x73, 0x74, 0x50,
	0x61, 0x74, 0x68, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x54, 0x0a, 0x11, 0x44, 0x6f, 0x77,
	0x6e, 0x77, 0x61, 0x72, 0x64, 0x41, 0x50, 0x49, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65,
	0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x77,
	0x61, 0x72, 0x64, 0x41, 0x50, 0x49, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x11, 0x44, 0x6f,
	0x77, 0x6e, 0x77, 0x61, 0x72, 0x64, 0x41, 0x50, 0x49, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12,
	0x3c, 0x0a, 0x09, 0x50, 0x56, 0x43, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x6d,
	0x70, 0x61, 0x61, 0x73, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x50, 0x56, 0x43, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x52, 0x09, 0x50, 0x56, 0x43, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22, 0x44, 0x0a,
	0x12, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x66, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x22, 0x41, 0x0a, 0x0f, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x66,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x22, 0x38, 0x0a, 0x0e, 0x48, 0x6f, 0x73, 0x74, 0x50, 0x61,
	0x74, 0x68, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68,
	0x22, 0x4f, 0x0a, 0x15, 0x44, 0x6f, 0x77, 0x6e, 0x77, 0x61, 0x72, 0x64, 0x41, 0x50, 0x49, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x22, 0x0a,
	0x0c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x66, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x66, 0x50, 0x61, 0x74,
	0x68, 0x22, 0x55, 0x0a, 0x11, 0x44, 0x6f, 0x77, 0x6e, 0x77, 0x61, 0x72, 0x64, 0x41, 0x50, 0x49,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x6f, 0x72, 0x73,
	0x65, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x44, 0x6f, 0x77, 0x6e,
	0x77, 0x61, 0x72, 0x64, 0x41, 0x50, 0x49, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x1f, 0x0a, 0x09, 0x50, 0x56, 0x43, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xea, 0x01, 0x0a, 0x0a, 0x4e, 0x65,
	0x74, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x48, 0x6f, 0x73, 0x74,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x48,
	0x6f, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x6f,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x48, 0x6f,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x6e, 0x73, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x44, 0x6e, 0x73, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x12, 0x3c, 0x0a, 0x09, 0x44, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x6f,
	0x72, 0x73, 0x65, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x44, 0x6e,
	0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09, 0x44, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x42, 0x0a, 0x0b, 0x48, 0x6f, 0x73, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x6f,
	0x72, 0x73, 0x65, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x61, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x48, 0x6f, 0x73, 0x74, 0x41,
	0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x22, 0x2d, 0x0a, 0x09, 0x44, 0x6e, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x73, 0x22, 0xf5, 0x05, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x75, 0x6c,
	0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x74, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x54, 0x74, 0x79, 0x12, 0x38, 0x0a, 0x05, 0x50, 0x6f, 0x72,
	0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68,
	0x6f, 0x72, 0x73, 0x65, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x05, 0x50, 0x6f,
	0x72, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x69,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x44, 0x69, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x41, 0x72, 0x67, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x41, 0x72, 0x67,
	0x73, 0x12, 0x2f, 0x0a, 0x04, 0x45, 0x6e, 0x76, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x6d, 0x70, 0x61, 0x61,
	0x73, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x52, 0x04, 0x45, 0x6e,
	0x76, 0x73, 0x12, 0x43, 0x0a, 0x08, 0x45, 0x6e, 0x76, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65,
	0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x45, 0x6e, 0x76, 0x56, 0x61,
	0x72, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x45,
	0x6e, 0x76, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x69, 0x76, 0x69,
	0x6c, 0x65, 0x67, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x50, 0x72, 0x69,
	0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x64,
	0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x70, 0x6f, 0x64,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x09, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x0c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4d,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f,
	0x64, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x70, 0x6f,
	0x64, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x0c,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x47, 0x0a, 0x0c,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x6d,
	0x70, 0x61, 0x61, 0x73, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x52, 0x0c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70,
	0x50, 0x72, 0x6f, 0x62, 0x65, 0x12, 0x49, 0x0a, 0x0d, 0x4c, 0x69, 0x76, 0x65, 0x6e, 0x65, 0x73,
	0x73, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63,
	0x6f, 0x64, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x70,
	0x6f, 0x64, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x62,
	0x65, 0x52, 0x0d, 0x4c, 0x69, 0x76, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x62, 0x65,
	0x12, 0x4b, 0x0a, 0x0e, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f,
	0x62, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68,
	0x6f, 0x72, 0x73, 0x65, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x52, 0x0e, 0x52,
	0x65, 0x61, 0x64, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x22, 0x60, 0x0a,
	0x06, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x52,
	0x65, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x52, 0x65,
	0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x5a, 0x0a, 0x12, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x66,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x52, 0x65, 0x66, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0x65, 0x0a, 0x0d, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x6f, 0x72,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x50, 0x6f,
	0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x50, 0x6f,
	0x72, 0x74, 0x22, 0x9b, 0x01, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x65, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x4d, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x6d, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x4d, 0x65, 0x6d, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x70, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x43, 0x70, 0x75, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x70, 0x75, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x43, 0x70, 0x75, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0x66, 0x0a, 0x0c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08,
	0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x22, 0xb1, 0x02, 0x0a, 0x0e, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3b, 0x0a, 0x07, 0x48, 0x74, 0x74, 0x70, 0x47,
	0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68,
	0x6f, 0x72, 0x73, 0x65, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x50,
	0x72, 0x6f, 0x62, 0x65, 0x48, 0x74, 0x74, 0x70, 0x47, 0x65, 0x74, 0x52, 0x07, 0x48, 0x74, 0x74,
	0x70, 0x47, 0x65, 0x74, 0x12, 0x35, 0x0a, 0x04, 0x45, 0x78, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x6d,
	0x70, 0x61, 0x61, 0x73, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x04, 0x45, 0x78, 0x65, 0x63, 0x12, 0x41, 0x0a, 0x09, 0x54,
	0x63, 0x70, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73,
	0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x54, 0x63, 0x70, 0x53, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x09, 0x54, 0x63, 0x70, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x3c,
	0x0a, 0x09, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x6d, 0x70,
	0x61, 0x61, 0x73, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xa6, 0x01, 0x0a,
	0x0c, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x48, 0x74, 0x74, 0x70, 0x47, 0x65, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a,
	0x04, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50, 0x6f, 0x72,
	0x74, 0x12, 0x42, 0x0a, 0x0b, 0x48, 0x74, 0x74, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x6f, 0x72,
	0x73, 0x65, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x61, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x48, 0x74, 0x74, 0x70, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x22, 0x28, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22,
	0x38, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x54, 0x63, 0x70, 0x53, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x22, 0xe3, 0x01, 0x0a, 0x09, 0x50, 0x72,
	0x6f, 0x62, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x49, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x6c, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x44, 0x65, 0x6c,
	0x61, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12,
	0x26, 0x0a, 0x0e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x10, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68,
	0x6f, 0x6c, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x54, 0x68,
	0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x46,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x22,
	0xdc, 0x01, 0x0a, 0x0e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69,
	0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x44, 0x0a, 0x0c, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68,
	0x6f, 0x72, 0x73, 0x65, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x61, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x4e, 0x6f, 0x64, 0x65,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x54, 0x0a, 0x0c, 0x4e, 0x6f, 0x64, 0x65,
	0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73,
	0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x54, 0x65, 0x72, 0x6d, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x0c, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x22, 0x61,
	0x0a, 0x1b, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x65,
	0x72, 0x6d, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x22, 0xa1, 0x01, 0x0a, 0x0b, 0x50, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x65, 0x61, 0x64, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x41, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x41, 0x67,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x50, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x50, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x6f, 0x64, 0x65, 0x22, 0x62, 0x0a, 0x06, 0x50, 0x6f, 0x64, 0x53, 0x65, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x42, 0x0a, 0x0b, 0x50, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x64,
	0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2e, 0x70, 0x6f, 0x64,
	0x2e, 0x50, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x50, 0x6f,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x64, 0x62, 0x61, 0x2f,
	0x64, 0x65, 0x76, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x6d, 0x70, 0x61, 0x61, 0x73, 0x2f, 0x61,
	0x70, 0x70, 0x73, 0x2f, 0x70, 0x6f, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_apps_pod_pb_pod_proto_rawDescOnce sync.Once
	file_apps_pod_pb_pod_proto_rawDescData = file_apps_pod_pb_pod_proto_rawDesc
)

func file_apps_pod_pb_pod_proto_rawDescGZIP() []byte {
	file_apps_pod_pb_pod_proto_rawDescOnce.Do(func() {
		file_apps_pod_pb_pod_proto_rawDescData = protoimpl.X.CompressGZIP(file_apps_pod_pb_pod_proto_rawDescData)
	})
	return file_apps_pod_pb_pod_proto_rawDescData
}

var file_apps_pod_pb_pod_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_apps_pod_pb_pod_proto_goTypes = []interface{}{
	(*CreatePodRequest)(nil),            // 0: codehorse.mpaas.pod.CreatePodRequest
	(*Pod)(nil),                         // 1: codehorse.mpaas.pod.Pod
	(*Tolerations)(nil),                 // 2: codehorse.mpaas.pod.Tolerations
	(*ListMapItem)(nil),                 // 3: codehorse.mpaas.pod.ListMapItem
	(*Base)(nil),                        // 4: codehorse.mpaas.pod.Base
	(*Volume)(nil),                      // 5: codehorse.mpaas.pod.Volume
	(*ConfigMapRefVolume)(nil),          // 6: codehorse.mpaas.pod.ConfigMapRefVolume
	(*SecretRefVolume)(nil),             // 7: codehorse.mpaas.pod.SecretRefVolume
	(*HostPathVolume)(nil),              // 8: codehorse.mpaas.pod.HostPathVolume
	(*DownwardAPIVolumeItem)(nil),       // 9: codehorse.mpaas.pod.DownwardAPIVolumeItem
	(*DownwardAPIVolume)(nil),           // 10: codehorse.mpaas.pod.DownwardAPIVolume
	(*PVCVolume)(nil),                   // 11: codehorse.mpaas.pod.PVCVolume
	(*NetWorking)(nil),                  // 12: codehorse.mpaas.pod.NetWorking
	(*DnsConfig)(nil),                   // 13: codehorse.mpaas.pod.DnsConfig
	(*Container)(nil),                   // 14: codehorse.mpaas.pod.Container
	(*EnvVar)(nil),                      // 15: codehorse.mpaas.pod.EnvVar
	(*EnvVarFromResource)(nil),          // 16: codehorse.mpaas.pod.EnvVarFromResource
	(*ContainerPort)(nil),               // 17: codehorse.mpaas.pod.ContainerPort
	(*Resources)(nil),                   // 18: codehorse.mpaas.pod.Resources
	(*VolumeMounts)(nil),                // 19: codehorse.mpaas.pod.VolumeMounts
	(*ContainerProbe)(nil),              // 20: codehorse.mpaas.pod.ContainerProbe
	(*ProbeHttpGet)(nil),                // 21: codehorse.mpaas.pod.ProbeHttpGet
	(*ProbeCommand)(nil),                // 22: codehorse.mpaas.pod.ProbeCommand
	(*ProbeTcpSocket)(nil),              // 23: codehorse.mpaas.pod.ProbeTcpSocket
	(*ProbeTime)(nil),                   // 24: codehorse.mpaas.pod.ProbeTime
	(*NodeScheduling)(nil),              // 25: codehorse.mpaas.pod.NodeScheduling
	(*NodeSelectorTermExpressions)(nil), // 26: codehorse.mpaas.pod.NodeSelectorTermExpressions
	(*PodListItem)(nil),                 // 27: codehorse.mpaas.pod.PodListItem
	(*PodSet)(nil),                      // 28: codehorse.mpaas.pod.PodSet
	(*meta.Meta)(nil),                   // 29: codehorse.mcube.meta.Meta
}
var file_apps_pod_pb_pod_proto_depIdxs = []int32{
	1,  // 0: codehorse.mpaas.pod.CreatePodRequest.pod:type_name -> codehorse.mpaas.pod.Pod
	29, // 1: codehorse.mpaas.pod.Pod.Meta:type_name -> codehorse.mcube.meta.Meta
	4,  // 2: codehorse.mpaas.pod.Pod.Base:type_name -> codehorse.mpaas.pod.Base
	5,  // 3: codehorse.mpaas.pod.Pod.Volumes:type_name -> codehorse.mpaas.pod.Volume
	12, // 4: codehorse.mpaas.pod.Pod.NetWorking:type_name -> codehorse.mpaas.pod.NetWorking
	14, // 5: codehorse.mpaas.pod.Pod.InitContainers:type_name -> codehorse.mpaas.pod.Container
	14, // 6: codehorse.mpaas.pod.Pod.Containers:type_name -> codehorse.mpaas.pod.Container
	2,  // 7: codehorse.mpaas.pod.Pod.Tolerations:type_name -> codehorse.mpaas.pod.Tolerations
	25, // 8: codehorse.mpaas.pod.Pod.NodeScheduling:type_name -> codehorse.mpaas.pod.NodeScheduling
	3,  // 9: codehorse.mpaas.pod.Base.Labels:type_name -> codehorse.mpaas.pod.ListMapItem
	6,  // 10: codehorse.mpaas.pod.Volume.ConfigMapRefVolume:type_name -> codehorse.mpaas.pod.ConfigMapRefVolume
	7,  // 11: codehorse.mpaas.pod.Volume.SecretRefVolume:type_name -> codehorse.mpaas.pod.SecretRefVolume
	8,  // 12: codehorse.mpaas.pod.Volume.HostPathVolume:type_name -> codehorse.mpaas.pod.HostPathVolume
	10, // 13: codehorse.mpaas.pod.Volume.DownwardAPIVolume:type_name -> codehorse.mpaas.pod.DownwardAPIVolume
	11, // 14: codehorse.mpaas.pod.Volume.PVCVolume:type_name -> codehorse.mpaas.pod.PVCVolume
	9,  // 15: codehorse.mpaas.pod.DownwardAPIVolume.Items:type_name -> codehorse.mpaas.pod.DownwardAPIVolumeItem
	13, // 16: codehorse.mpaas.pod.NetWorking.DnsConfig:type_name -> codehorse.mpaas.pod.DnsConfig
	3,  // 17: codehorse.mpaas.pod.NetWorking.HostAliases:type_name -> codehorse.mpaas.pod.ListMapItem
	17, // 18: codehorse.mpaas.pod.Container.Ports:type_name -> codehorse.mpaas.pod.ContainerPort
	15, // 19: codehorse.mpaas.pod.Container.Envs:type_name -> codehorse.mpaas.pod.EnvVar
	16, // 20: codehorse.mpaas.pod.Container.EnvsFrom:type_name -> codehorse.mpaas.pod.EnvVarFromResource
	18, // 21: codehorse.mpaas.pod.Container.Resources:type_name -> codehorse.mpaas.pod.Resources
	19, // 22: codehorse.mpaas.pod.Container.VolumeMounts:type_name -> codehorse.mpaas.pod.VolumeMounts
	20, // 23: codehorse.mpaas.pod.Container.StartupProbe:type_name -> codehorse.mpaas.pod.ContainerProbe
	20, // 24: codehorse.mpaas.pod.Container.LivenessProbe:type_name -> codehorse.mpaas.pod.ContainerProbe
	20, // 25: codehorse.mpaas.pod.Container.ReadinessProbe:type_name -> codehorse.mpaas.pod.ContainerProbe
	21, // 26: codehorse.mpaas.pod.ContainerProbe.HttpGet:type_name -> codehorse.mpaas.pod.ProbeHttpGet
	22, // 27: codehorse.mpaas.pod.ContainerProbe.Exec:type_name -> codehorse.mpaas.pod.ProbeCommand
	23, // 28: codehorse.mpaas.pod.ContainerProbe.TcpSocket:type_name -> codehorse.mpaas.pod.ProbeTcpSocket
	24, // 29: codehorse.mpaas.pod.ContainerProbe.ProbeTime:type_name -> codehorse.mpaas.pod.ProbeTime
	3,  // 30: codehorse.mpaas.pod.ProbeHttpGet.HttpHeaders:type_name -> codehorse.mpaas.pod.ListMapItem
	3,  // 31: codehorse.mpaas.pod.NodeScheduling.NodeSelector:type_name -> codehorse.mpaas.pod.ListMapItem
	26, // 32: codehorse.mpaas.pod.NodeScheduling.NodeAffinity:type_name -> codehorse.mpaas.pod.NodeSelectorTermExpressions
	27, // 33: codehorse.mpaas.pod.PodSet.PodListItem:type_name -> codehorse.mpaas.pod.PodListItem
	34, // [34:34] is the sub-list for method output_type
	34, // [34:34] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_apps_pod_pb_pod_proto_init() }
func file_apps_pod_pb_pod_proto_init() {
	if File_apps_pod_pb_pod_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_apps_pod_pb_pod_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_pod_pb_pod_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_pod_pb_pod_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tolerations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_pod_pb_pod_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMapItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_pod_pb_pod_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Base); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_pod_pb_pod_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Volume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_pod_pb_pod_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigMapRefVolume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_pod_pb_pod_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecretRefVolume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_pod_pb_pod_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostPathVolume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_pod_pb_pod_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownwardAPIVolumeItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_pod_pb_pod_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownwardAPIVolume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_pod_pb_pod_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PVCVolume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_pod_pb_pod_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetWorking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_pod_pb_pod_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DnsConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_pod_pb_pod_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Container); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_pod_pb_pod_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvVar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_pod_pb_pod_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvVarFromResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_pod_pb_pod_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerPort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_pod_pb_pod_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_pod_pb_pod_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VolumeMounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_pod_pb_pod_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerProbe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_pod_pb_pod_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProbeHttpGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_pod_pb_pod_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProbeCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_pod_pb_pod_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProbeTcpSocket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_pod_pb_pod_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProbeTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_pod_pb_pod_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeScheduling); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_pod_pb_pod_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeSelectorTermExpressions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_pod_pb_pod_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_pod_pb_pod_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_apps_pod_pb_pod_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_apps_pod_pb_pod_proto_goTypes,
		DependencyIndexes: file_apps_pod_pb_pod_proto_depIdxs,
		MessageInfos:      file_apps_pod_pb_pod_proto_msgTypes,
	}.Build()
	File_apps_pod_pb_pod_proto = out.File
	file_apps_pod_pb_pod_proto_rawDesc = nil
	file_apps_pod_pb_pod_proto_goTypes = nil
	file_apps_pod_pb_pod_proto_depIdxs = nil
}
