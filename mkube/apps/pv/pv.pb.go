// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: apps/pv/pb/pv.proto

package pv

import (
	meta "github.com/solodba/mcube/pb/meta"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CreatePVRequest结构体
type CreatePVRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"name" json:"name"
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"name" bson:"name"`
	// @gotags: bson:"labels" json:"labels"
	Labels []*ListMapItem `protobuf:"bytes,2,rep,name=Labels,proto3" json:"labels" bson:"labels"`
	// @gotags: bson:"capacity" json:"capacity"
	Capacity int32 `protobuf:"varint,3,opt,name=Capacity,proto3" json:"capacity" bson:"capacity"`
	// @gotags: bson:"accessModes" json:"accessModes"
	AccessModes []string `protobuf:"bytes,4,rep,name=AccessModes,proto3" json:"accessModes" bson:"accessModes"`
	// @gotags: bson:"reClaimPolicy" json:"reClaimPolicy"
	ReClaimPolicy string `protobuf:"bytes,5,opt,name=ReClaimPolicy,proto3" json:"reClaimPolicy" bson:"reClaimPolicy"`
	// @gotags: bson:"volumeSource" json:"volumeSource"
	VolumeSource *VolumeSource `protobuf:"bytes,6,opt,name=VolumeSource,proto3" json:"volumeSource" bson:"volumeSource"`
}

func (x *CreatePVRequest) Reset() {
	*x = CreatePVRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_pv_pb_pv_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePVRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePVRequest) ProtoMessage() {}

func (x *CreatePVRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apps_pv_pb_pv_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePVRequest.ProtoReflect.Descriptor instead.
func (*CreatePVRequest) Descriptor() ([]byte, []int) {
	return file_apps_pv_pb_pv_proto_rawDescGZIP(), []int{0}
}

func (x *CreatePVRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreatePVRequest) GetLabels() []*ListMapItem {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *CreatePVRequest) GetCapacity() int32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *CreatePVRequest) GetAccessModes() []string {
	if x != nil {
		return x.AccessModes
	}
	return nil
}

func (x *CreatePVRequest) GetReClaimPolicy() string {
	if x != nil {
		return x.ReClaimPolicy
	}
	return ""
}

func (x *CreatePVRequest) GetVolumeSource() *VolumeSource {
	if x != nil {
		return x.VolumeSource
	}
	return nil
}

// NfsVolumeSource结构体
type NfsVolumeSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"nfsServer" json:"nfsServer"
	NfsServer string `protobuf:"bytes,1,opt,name=NfsServer,proto3" json:"nfsServer" bson:"nfsServer"`
	// @gotags: bson:"nfsPath" json:"nfsPath"
	NfsPath string `protobuf:"bytes,2,opt,name=NfsPath,proto3" json:"nfsPath" bson:"nfsPath"`
	// @gotags: bson:"nfsReadOnly" json:"nfsReadOnly"
	NfsReadOnly bool `protobuf:"varint,3,opt,name=NfsReadOnly,proto3" json:"nfsReadOnly" bson:"nfsReadOnly"`
}

func (x *NfsVolumeSource) Reset() {
	*x = NfsVolumeSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_pv_pb_pv_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NfsVolumeSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NfsVolumeSource) ProtoMessage() {}

func (x *NfsVolumeSource) ProtoReflect() protoreflect.Message {
	mi := &file_apps_pv_pb_pv_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NfsVolumeSource.ProtoReflect.Descriptor instead.
func (*NfsVolumeSource) Descriptor() ([]byte, []int) {
	return file_apps_pv_pb_pv_proto_rawDescGZIP(), []int{1}
}

func (x *NfsVolumeSource) GetNfsServer() string {
	if x != nil {
		return x.NfsServer
	}
	return ""
}

func (x *NfsVolumeSource) GetNfsPath() string {
	if x != nil {
		return x.NfsPath
	}
	return ""
}

func (x *NfsVolumeSource) GetNfsReadOnly() bool {
	if x != nil {
		return x.NfsReadOnly
	}
	return false
}

// VolumeSource结构体
type VolumeSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"type" json:"type"
	Type string `protobuf:"bytes,1,opt,name=Type,proto3" json:"type" bson:"type"`
	// @gotags: bson:"nfsVolumeSource" json:"nfsVolumeSource"
	NfsVolumeSource *NfsVolumeSource `protobuf:"bytes,2,opt,name=NfsVolumeSource,proto3" json:"nfsVolumeSource" bson:"nfsVolumeSource"`
}

func (x *VolumeSource) Reset() {
	*x = VolumeSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_pv_pb_pv_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VolumeSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VolumeSource) ProtoMessage() {}

func (x *VolumeSource) ProtoReflect() protoreflect.Message {
	mi := &file_apps_pv_pb_pv_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VolumeSource.ProtoReflect.Descriptor instead.
func (*VolumeSource) Descriptor() ([]byte, []int) {
	return file_apps_pv_pb_pv_proto_rawDescGZIP(), []int{2}
}

func (x *VolumeSource) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *VolumeSource) GetNfsVolumeSource() *NfsVolumeSource {
	if x != nil {
		return x.NfsVolumeSource
	}
	return nil
}

// 通用键值对结构体
type ListMapItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"key" json:"key"
	Key string `protobuf:"bytes,1,opt,name=Key,proto3" json:"key" bson:"key"`
	// @gotags: bson:"value" json:"value"
	Value string `protobuf:"bytes,2,opt,name=Value,proto3" json:"value" bson:"value"`
}

func (x *ListMapItem) Reset() {
	*x = ListMapItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_pv_pb_pv_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMapItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMapItem) ProtoMessage() {}

func (x *ListMapItem) ProtoReflect() protoreflect.Message {
	mi := &file_apps_pv_pb_pv_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMapItem.ProtoReflect.Descriptor instead.
func (*ListMapItem) Descriptor() ([]byte, []int) {
	return file_apps_pv_pb_pv_proto_rawDescGZIP(), []int{3}
}

func (x *ListMapItem) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ListMapItem) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// PV结构体
type PV struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:",inline" json:"meta"
	Meta *meta.Meta `protobuf:"bytes,1,opt,name=Meta,proto3" json:"meta" bson:",inline"`
	// @gotags: bson:",inline" json:"pv"
	PV *CreatePVRequest `protobuf:"bytes,2,opt,name=PV,proto3" json:"pv" bson:",inline"`
}

func (x *PV) Reset() {
	*x = PV{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_pv_pb_pv_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PV) ProtoMessage() {}

func (x *PV) ProtoReflect() protoreflect.Message {
	mi := &file_apps_pv_pb_pv_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PV.ProtoReflect.Descriptor instead.
func (*PV) Descriptor() ([]byte, []int) {
	return file_apps_pv_pb_pv_proto_rawDescGZIP(), []int{4}
}

func (x *PV) GetMeta() *meta.Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *PV) GetPV() *CreatePVRequest {
	if x != nil {
		return x.PV
	}
	return nil
}

// PVSet结构体
type PVSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"total" json:"total"
	Total int64 `protobuf:"varint,1,opt,name=Total,proto3" json:"total" bson:"total"`
	// @gotags: bson:"items" json:"items"
	Items []*PVSetItem `protobuf:"bytes,2,rep,name=Items,proto3" json:"items" bson:"items"`
}

func (x *PVSet) Reset() {
	*x = PVSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_pv_pb_pv_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PVSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PVSet) ProtoMessage() {}

func (x *PVSet) ProtoReflect() protoreflect.Message {
	mi := &file_apps_pv_pb_pv_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PVSet.ProtoReflect.Descriptor instead.
func (*PVSet) Descriptor() ([]byte, []int) {
	return file_apps_pv_pb_pv_proto_rawDescGZIP(), []int{5}
}

func (x *PVSet) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PVSet) GetItems() []*PVSetItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// PVSetItem结构体
type PVSetItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"name" json:"name"
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"name" bson:"name"`
	// @gotags: bson:"labels" json:"labels"
	Labels []*ListMapItem `protobuf:"bytes,2,rep,name=Labels,proto3" json:"labels" bson:"labels"`
	// @gotags: bson:"capacity" json:"capacity"
	Capacity int32 `protobuf:"varint,3,opt,name=Capacity,proto3" json:"capacity" bson:"capacity"`
	// @gotags: bson:"accessModes" json:"accessModes"
	AccessModes []string `protobuf:"bytes,4,rep,name=AccessModes,proto3" json:"accessModes" bson:"accessModes"`
	// @gotags: bson:"reClaimPolicy" json:"reClaimPolicy"
	ReClaimPolicy string `protobuf:"bytes,5,opt,name=ReClaimPolicy,proto3" json:"reClaimPolicy" bson:"reClaimPolicy"`
	// @gotags: bson:"status" json:"status"
	Status string `protobuf:"bytes,6,opt,name=Status,proto3" json:"status" bson:"status"`
	// @gotags: bson:"claim" json:"claim"
	Claim string `protobuf:"bytes,7,opt,name=Claim,proto3" json:"claim" bson:"claim"`
	// @gotags: bson:"storageClassName" json:"storageClassName"
	StorageClassName string `protobuf:"bytes,8,opt,name=StorageClassName,proto3" json:"storageClassName" bson:"storageClassName"`
	// @gotags: bson:"age" json:"age"
	Age int64 `protobuf:"varint,9,opt,name=Age,proto3" json:"age" bson:"age"`
	// @gotags: bson:"reason" json:"reason"
	Reason string `protobuf:"bytes,10,opt,name=Reason,proto3" json:"reason" bson:"reason"`
}

func (x *PVSetItem) Reset() {
	*x = PVSetItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_pv_pb_pv_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PVSetItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PVSetItem) ProtoMessage() {}

func (x *PVSetItem) ProtoReflect() protoreflect.Message {
	mi := &file_apps_pv_pb_pv_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PVSetItem.ProtoReflect.Descriptor instead.
func (*PVSetItem) Descriptor() ([]byte, []int) {
	return file_apps_pv_pb_pv_proto_rawDescGZIP(), []int{6}
}

func (x *PVSetItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PVSetItem) GetLabels() []*ListMapItem {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *PVSetItem) GetCapacity() int32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *PVSetItem) GetAccessModes() []string {
	if x != nil {
		return x.AccessModes
	}
	return nil
}

func (x *PVSetItem) GetReClaimPolicy() string {
	if x != nil {
		return x.ReClaimPolicy
	}
	return ""
}

func (x *PVSetItem) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PVSetItem) GetClaim() string {
	if x != nil {
		return x.Claim
	}
	return ""
}

func (x *PVSetItem) GetStorageClassName() string {
	if x != nil {
		return x.StorageClassName
	}
	return ""
}

func (x *PVSetItem) GetAge() int64 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *PVSetItem) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_apps_pv_pb_pv_proto protoreflect.FileDescriptor

var file_apps_pv_pb_pv_proto_rawDesc = []byte{
	0x0a, 0x13, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x70, 0x76, 0x2f, 0x70, 0x62, 0x2f, 0x70, 0x76, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65,
	0x2e, 0x6d, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x70, 0x76, 0x1a, 0x35, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x70, 0x62, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x73, 0x6f, 0x6c, 0x6f, 0x64, 0x62, 0x61, 0x2f, 0x6d, 0x63, 0x75, 0x62, 0x65, 0x2f, 0x70, 0x62,
	0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x88, 0x02, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x56, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68,
	0x6f, 0x72, 0x73, 0x65, 0x2e, 0x6d, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x70, 0x76, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x61, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a,
	0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x73, 0x12,
	0x24, 0x0a, 0x0d, 0x52, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x52, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x44, 0x0a, 0x0c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f,
	0x64, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x6d, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x70, 0x76,
	0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0c, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x6b, 0x0a, 0x0f, 0x4e,
	0x66, 0x73, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x4e, 0x66, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x4e, 0x66, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x4e, 0x66, 0x73, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4e,
	0x66, 0x73, 0x50, 0x61, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x66, 0x73, 0x52, 0x65, 0x61,
	0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x4e, 0x66, 0x73,
	0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x22, 0x71, 0x0a, 0x0c, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4d, 0x0a, 0x0f,
	0x4e, 0x66, 0x73, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x6f, 0x72, 0x73,
	0x65, 0x2e, 0x6d, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x70, 0x76, 0x2e, 0x4e, 0x66, 0x73, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0f, 0x4e, 0x66, 0x73, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x35, 0x0a, 0x0b, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x61, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x69, 0x0a, 0x02, 0x50, 0x56, 0x12, 0x2e, 0x0a, 0x04, 0x4d, 0x65, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x6f, 0x72,
	0x73, 0x65, 0x2e, 0x6d, 0x63, 0x75, 0x62, 0x65, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x04, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x02, 0x50, 0x56, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65,
	0x2e, 0x6d, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x70, 0x76, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x56, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x02, 0x50, 0x56, 0x22, 0x52, 0x0a,
	0x05, 0x50, 0x56, 0x53, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x33, 0x0a, 0x05,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f,
	0x64, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x6d, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x70, 0x76,
	0x2e, 0x50, 0x56, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0xc0, 0x02, 0x0a, 0x09, 0x50, 0x56, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e,
	0x6d, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x70, 0x76, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x70,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65,
	0x43, 0x6c, 0x61, 0x69, 0x6d, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x52, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x2a,
	0x0a, 0x10, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x67,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x41, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x64, 0x62, 0x61, 0x2f, 0x64, 0x65, 0x76, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2f, 0x6d, 0x6b, 0x75, 0x62, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x70,
	0x76, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_apps_pv_pb_pv_proto_rawDescOnce sync.Once
	file_apps_pv_pb_pv_proto_rawDescData = file_apps_pv_pb_pv_proto_rawDesc
)

func file_apps_pv_pb_pv_proto_rawDescGZIP() []byte {
	file_apps_pv_pb_pv_proto_rawDescOnce.Do(func() {
		file_apps_pv_pb_pv_proto_rawDescData = protoimpl.X.CompressGZIP(file_apps_pv_pb_pv_proto_rawDescData)
	})
	return file_apps_pv_pb_pv_proto_rawDescData
}

var file_apps_pv_pb_pv_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_apps_pv_pb_pv_proto_goTypes = []interface{}{
	(*CreatePVRequest)(nil), // 0: codehorse.mkube.pv.CreatePVRequest
	(*NfsVolumeSource)(nil), // 1: codehorse.mkube.pv.NfsVolumeSource
	(*VolumeSource)(nil),    // 2: codehorse.mkube.pv.VolumeSource
	(*ListMapItem)(nil),     // 3: codehorse.mkube.pv.ListMapItem
	(*PV)(nil),              // 4: codehorse.mkube.pv.PV
	(*PVSet)(nil),           // 5: codehorse.mkube.pv.PVSet
	(*PVSetItem)(nil),       // 6: codehorse.mkube.pv.PVSetItem
	(*meta.Meta)(nil),       // 7: codehorse.mcube.meta.Meta
}
var file_apps_pv_pb_pv_proto_depIdxs = []int32{
	3, // 0: codehorse.mkube.pv.CreatePVRequest.Labels:type_name -> codehorse.mkube.pv.ListMapItem
	2, // 1: codehorse.mkube.pv.CreatePVRequest.VolumeSource:type_name -> codehorse.mkube.pv.VolumeSource
	1, // 2: codehorse.mkube.pv.VolumeSource.NfsVolumeSource:type_name -> codehorse.mkube.pv.NfsVolumeSource
	7, // 3: codehorse.mkube.pv.PV.Meta:type_name -> codehorse.mcube.meta.Meta
	0, // 4: codehorse.mkube.pv.PV.PV:type_name -> codehorse.mkube.pv.CreatePVRequest
	6, // 5: codehorse.mkube.pv.PVSet.Items:type_name -> codehorse.mkube.pv.PVSetItem
	3, // 6: codehorse.mkube.pv.PVSetItem.Labels:type_name -> codehorse.mkube.pv.ListMapItem
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_apps_pv_pb_pv_proto_init() }
func file_apps_pv_pb_pv_proto_init() {
	if File_apps_pv_pb_pv_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_apps_pv_pb_pv_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePVRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_pv_pb_pv_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NfsVolumeSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_pv_pb_pv_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VolumeSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_pv_pb_pv_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMapItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_pv_pb_pv_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PV); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_pv_pb_pv_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PVSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_pv_pb_pv_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PVSetItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_apps_pv_pb_pv_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_apps_pv_pb_pv_proto_goTypes,
		DependencyIndexes: file_apps_pv_pb_pv_proto_depIdxs,
		MessageInfos:      file_apps_pv_pb_pv_proto_msgTypes,
	}.Build()
	File_apps_pv_pb_pv_proto = out.File
	file_apps_pv_pb_pv_proto_rawDesc = nil
	file_apps_pv_pb_pv_proto_goTypes = nil
	file_apps_pv_pb_pv_proto_depIdxs = nil
}
